//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace sUpdater.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("sUpdater.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MIT License (MIT)
        ///
        ///Copyright (c) 2019 D-ASYNC
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the following conditions:
        ///
        ///The above copyri [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AsyncEnumerableLicense {
            get {
                return ResourceManager.GetString("AsyncEnumerableLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MIT License
        ///
        ///Copyright (c) 2012-2019 RBSoft
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the following conditions:
        ///
        ///The above copyright no [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AutoUpdaterNETLicense {
            get {
                return ResourceManager.GetString("AutoUpdaterNETLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inno Setup License
        ///==================
        ///
        ///Except where otherwise noted, all of the documentation and software included in the Inno Setup
        ///package is copyrighted by Jordan Russell.
        ///
        ///Copyright (C) 1997-2019 Jordan Russell. All rights reserved.
        ///Portions Copyright (C) 2000-2019 Martijn Laan. All rights reserved.
        ///
        ///This software is provided &quot;as-is,&quot; without any express or implied warranty. In no event shall the
        ///author be held liable for any damages arising from the use of this software.
        ///
        ///Permission is gra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InnoSetupLicense {
            get {
                return ResourceManager.GetString("InnoSetupLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   7-Zip
        ///  ~~~~~
        ///  License for use and distribution
        ///  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        ///
        ///  7-Zip Copyright (C) 1999-2019 Igor Pavlov.
        ///
        ///  The licenses for files are:
        ///
        ///    1) 7z.dll:
        ///         - The &quot;GNU LGPL&quot; as main license for most of the code
        ///         - The &quot;GNU LGPL&quot; with &quot;unRAR license restriction&quot; for some code
        ///         - The &quot;BSD 3-clause License&quot; for some code
        ///    2) All other files: the &quot;GNU LGPL&quot;.
        ///
        ///  Redistributions in binary form must reproduce related license information from this fil [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SevenZipLicense {
            get {
                return ResourceManager.GetString("SevenZipLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon sUpdater {
            get {
                object obj = ResourceManager.GetObject("sUpdater", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon sUpdater_Grey {
            get {
                object obj = ResourceManager.GetObject("sUpdater_Grey", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon sUpdater_Orange {
            get {
                object obj = ResourceManager.GetObject("sUpdater_Orange", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Code Project Open License (CPOL)
        ///
        ///Preamble
        ///
        ///	This License governs Your use of the Work. This License is intended to allow developers
        ///	to use the Source Code and Executable Files provided as part of the Work in any
        ///	application in any form.
        ///
        ///	The main points subject to the terms of the License are:
        ///
        ///		- Source Code and Executable Files can be used in commercial applications;
        ///		- Source Code and Executable Files can be redistributed; and
        ///		- Source Code can be modified to create derivative wor [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WPFNotifyIconLicense {
            get {
                return ResourceManager.GetString("WPFNotifyIconLicense", resourceCulture);
            }
        }
    }
}
